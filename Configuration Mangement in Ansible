ANSIBLE
Why Ansible:
So for every org have system admins and they do configuration management but it should have every application up to date like java app, webserves…etc. To update if they use script that script may not work for both windows and linux, example yum command which may work in ubuntu but not in redhat. So this is the problem they need to update every server/sys manually. This will take time and hectic. Then we got  puppet, chef,salt which are very complex in nature then ANSIBLE came into picture

Ansible is an open-source automation tool used for tasks such as:
•	Configuring systems
•	Deploying applications
•	Managing servers

Ansible is a configuration management tool using YAML where we write playbooks.
We have control and manage nodes. Control node is VM and manage node is windows/linux/…
Ansible is not only a config mng tool, it’s a power automation tool. It also provode provision(EC2,S3,VM), CI/CD deploying, N/W automation.
To say WHAT IS ANSIBLE  It is an powerful automation platform where it can help you for provisioning, configuration(of VM’s), deploying, networking
We have Bash/ Python scripting but the problem is ex BASH – This cript may work in linux not in Windows. Python script we can write the script but we need to login all mchines and do the task and one more prblm is maintenance. So ansible we install in control node(EC2) and install in every machine.

When we use python over Ansible: we use python when we need an API.
Ansible installation: pip install ansible
		      Ansible –version

ANSIBLE adhoc commands:

How to setup Passwordless Authentication:
ssh-copy-id -f "-o IdentityFile <PATH TO PEM FILE>" ubuntu@<INSTANCE-PUBLIC-IP>
•	ssh-copy-id: This is the command used to copy your public key to a remote machine.
•	-f: This flag forces the copying of keys, which can be useful if you have keys already set up and want to overwrite them.
•	"-o IdentityFile ": This option specifies the identity file (private key) to use for the connection. The -o flag passes this option to the underlying ssh command.
•	ubuntu@: This is the username (ubuntu) and the IP address of the remote server you want to access.
Using Password
•	Go to the file /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
•	Update PasswordAuthentication yes
•	Sudo passwd ubuntu (set passwd)
•	Restart SSH -> sudo systemctl restart ssh
•	ssh-copy-id ubuntu@IP
Ansible Inventory:
Inventory is heart of ansible used to access manage nodes by control nodes. This file can be any where with .ini extension. If you want you can kept in /etc/ansible/hosts
Vim inventory.ini
               [app]
	ubuntu@Ip address of ec2(manage node)
ansible [pattern] -m [module] -a "[module options]"
command to run this is ansible -i inventory.ini -m ping all
ansible -i inventory.ini -m ping  -a “apt install opendk” all/app

We have two ways 1. Writing yaml format 2. using adhoc commands
Yaml written with help of playbooks for critical like that requires multiple steps. reusable
Adhoc commnds used for simple tasks.
Common tasks done by devops using adhoc are managinf files, packages


YAML: 
It is a human readable data serialization


 


Configuration Mangement in Ansible

Earlier when there is no Ansible for any upgrades, installations evrything was manual. Later Puppet, chef, Ansible, Salt was introduces.
Also there were some scripts implemeted but that not much helpful bcoz if they use shell script that may be support for on distribution of Linux but not all and for Windows power shell was implemented.
Ansible was introduced to make the life easier by creating Playbooks

Pupptet:
=============
Pull Mechanism
Masterslave/agent architecute  -- master server will be created and configure slaves for all instances as S1, S2, S3 AND then changes can be done
Puppet language

Ansible:
============
Push mechanism to install packages. Write ansible playbook scripts for all the intsances by giving Its Ip address/DNS names.
It uses AGENTLESS model. i.e., We can just put name of the servers in inventory files with Ip and also adding pswdless authentication
  Previouslywe need to update inventory file with IP Address of instances but with Dynamic Inventory it will automatically get the IP Addeess
Simple yaml manifest prgmg lang.
We can write our own Ansible modules

Disadvantages of Ansible:
===================================
1. Windows is still having with Ansible
2. Ansible  Debugging is not easy for devops engineers to understand the problem
3. Performance




Ansible Installation on Ubuntu
============================
sudo apt update
sudo apt install ansible
ansible --version
Create two EC2. ansible and target server. What we r doing here is that our ansible server
should be able to communicate with target server with passwdless authentication
   login to first ubuntu server using ssh private IP
   ssh-keygen --> will create id_rsa, id_rsa.pub keys in /home/ubuntu/.ssh
   Open id_rsa.pub and copy the conetent
   Logint to second server and run ssh-keygen
   Open authorized_keys file from /home/ubuntu/.ssh and paste the id_rsa.pub content to thius file
   ssh private Ip of target server (run from ansible server)
So, Passwdless authentication is prerequisite for ANSIBLE
We dont need to always write playbooks we can alsao use ansible adhoc commands we

Ansible inventory file path -- /etc/ansible/hosts/inventory
Inventory file will store the IP address of EC2

ansible inventory file path IP ADDres
vim inventory  -- add IP address
ansible -i inventory <Ip address/all> -m "module name" -a "touch devopsCLass"
ansible -i inventory <Ip address/all> -m "shell" -a "touch devopsCLass" and check target EC2 If devopsclass file is created or not

Diff btw ansible adhoc and playbooks
================================================
adhoc commands for simple tasks where we execute one or two commans and hwere as playbook for multiple commands

How do you group the servers in ansible
====================================================
[webservers]
172.56.78.68
ansible -i inventory webservers <Ip address/all> -m "shell" -a "touch devopsCLass"

For ansible everything is configured in inventory file . you can group all the servers in inventory file and tell ansible to run for
that particular or required or all servers




Wrtiing playbook for nginx installation
==========================================
vim playbook.yml
---   //This 3 dash indicates that this is a yaml file
- name: Install and start nginx
 hosts: all
 become: true
 tasks:
  - name: Install nginx
    apt: ///this is the module to install
      name: nginx
      state: present
   - name: Start nginx
      service:
        name: nginx
        state: started


run: ansible-playbook -vvv -i inventory playbookname.yml

This is  a simple task But what is we need to install kubernetes which a lot of tasks
like 50 and so many variable which is complex. So for such it is recommended
to use ansible Roles where we can properly structure variables.
So, if we want to used ansible roles we can use ansible-galaxy

ansible-galaxy role init kubernetes  -- will create kubernets role with folder created under
that bunch of files will be created which will help to structure playbook
files such as tasks, files, handlers.
Inside tasks we will create plybook yaml file
meta -- used to write metadata. details of playbook, license info.
Defaults -- store variable 
tests -- unit tests
handlers-- handle exception
